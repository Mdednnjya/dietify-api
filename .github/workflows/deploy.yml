name: Deploy to GCP VM

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to GCP VM
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Deploy Application
        run: |
          gcloud compute ssh dietify-api-vm \
            --zone=asia-southeast2-a \
            --project=${{ secrets.GCP_PROJECT_ID }} \
            --ssh-flag="-o ConnectTimeout=30" \
            --ssh-flag="-o StrictHostKeyChecking=no" \
            --command="
              set -e
              
              echo 'Installing system dependencies...'
              sudo apt-get update -y
              sudo apt-get install -y git curl net-tools htop jq
              
              if ! command -v docker &> /dev/null; then
                echo 'Installing Docker...'
                curl -fsSL https://get.docker.com -o get-docker.sh
                sh get-docker.sh
                sudo systemctl enable docker
                sudo systemctl start docker
                sudo usermod -aG docker \$USER
              fi
              
              if ! command -v docker-compose &> /dev/null; then
                echo 'Installing Docker Compose...'
                sudo curl -L \"https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-\$(uname -s)-\$(uname -m)\" -o /usr/local/bin/docker-compose
                sudo chmod +x /usr/local/bin/docker-compose
              fi
              
              echo 'Stopping existing services...'
              if [ -d \"dietify-api\" ]; then
                cd dietify-api
                sudo docker-compose down --remove-orphans --timeout 60 || true
                cd ..
                sudo rm -rf dietify-api
              fi
              
              echo 'Cleaning Docker resources...'
              sudo docker system prune -af --volumes || true
              sudo docker network prune -f || true
              
              echo 'Cloning repository...'
              git clone https://\${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/${{ github.repository }}.git dietify-api
              cd dietify-api
              
              echo 'Current commit:'
              git log --oneline -1
              
              echo 'Setting up directories...'
              mkdir -p models output data/raw data/interim
              sudo chown -R \$USER:\$USER models output data
              
              echo 'Building containers...'
              sudo docker-compose build --no-cache --pull
              
              echo 'Starting Redis service...'
              sudo docker-compose up -d redis
              
              echo 'Waiting for Redis readiness...'
              timeout 60s bash -c 'until sudo docker-compose exec redis redis-cli ping 2>/dev/null; do sleep 2; done'
              echo 'Redis is ready'
              
              echo 'Starting MLflow service...'
              sudo docker-compose up -d mlflow
              
              echo 'Waiting for MLflow initialization...'
              for i in {1..24}; do
                sleep 10
                if sudo docker-compose exec mlflow curl -f http://localhost:5000 >/dev/null 2>&1; then
                  echo 'MLflow is ready'
                  break
                fi
                echo 'Waiting for MLflow... attempt' \$i'/24'
                if [ \$i -eq 24 ]; then
                  echo 'MLflow initialization timeout, checking logs...'
                  sudo docker-compose logs mlflow --tail=30
                fi
              done
              
              echo 'Starting API service...'
              sudo docker-compose up -d api
              
              echo 'Waiting for API readiness...'
              for i in {1..18}; do
                sleep 10
                if sudo docker-compose exec api curl -f http://localhost:8000/api/v1/health >/dev/null 2>&1; then
                  echo 'API is ready'
                  break
                fi
                echo 'Waiting for API... attempt' \$i'/18'
                if [ \$i -eq 18 ]; then
                  echo 'API initialization timeout, checking logs...'
                  sudo docker-compose logs api --tail=30
                fi
              done
              
              echo 'Deployment status:'
              sudo docker-compose ps
              
              echo 'Service health verification:'
              sudo docker-compose exec api curl -f http://localhost:8000/api/v1/health >/dev/null 2>&1 && echo 'API: healthy' || echo 'API: unhealthy'
              sudo docker-compose exec mlflow curl -f http://localhost:5000 >/dev/null 2>&1 && echo 'MLflow: healthy' || echo 'MLflow: unhealthy'
              sudo docker-compose exec redis redis-cli ping >/dev/null 2>&1 && echo 'Redis: healthy' || echo 'Redis: unhealthy'
              
              echo 'Deployment completed'
            "

      - name: Display Deployment URLs
        run: |
          EXTERNAL_IP=$(gcloud compute instances describe ${{ secrets.GCP_INSTANCE }} \
            --zone=${{ secrets.GCP_ZONE }} \
            --project=${{ secrets.GCP_PROJECT_ID }} \
            --format="value(networkInterfaces[0].accessConfigs[0].natIP)")
          echo "Deployment Information:"
          echo "External IP: $EXTERNAL_IP"
          echo "API Health: http://$EXTERNAL_IP:8000/api/v1/health"
          echo "API Documentation: http://$EXTERNAL_IP:8000/docs"
          echo "MLflow UI: http://$EXTERNAL_IP:5000"