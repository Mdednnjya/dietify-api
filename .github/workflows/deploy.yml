name: 🚀 Dietify API Deployment

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    name: 🎯 Deploy to GCP VM
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🐳 Test Docker Build
        run: |
          echo "Testing Docker build locally..."
          docker build -t dietify-api:test .
          echo "✅ Docker build successful"

      - name: 🚀 Deploy to VM
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          password: ${{ secrets.VM_PASSWORD }}
          port: 22
          script: |
            echo "🔄 Starting deployment..."
            
            # Install Docker if not exists
            if ! command -v docker &> /dev/null; then
              curl -fsSL https://get.docker.com -o get-docker.sh
              sh get-docker.sh
              sudo usermod -aG docker $USER
              sudo systemctl enable docker
              sudo systemctl start docker
            fi
            
            # Install Docker Compose if not exists
            if ! command -v docker-compose &> /dev/null; then
              sudo curl -L "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi
            
            # Clone/update repository
            if [ -d "dietify-api" ]; then
              echo "📁 Updating existing repository..."
              cd dietify-api
              git pull origin main
            else
              echo "📥 Cloning repository..."
              git clone https://github.com/${{ github.repository }}.git dietify-api
              cd dietify-api
            fi
            
            # Stop existing containers
            echo "🛑 Stopping existing containers..."
            docker-compose down --remove-orphans || true
            
            # Build and start new containers
            echo "🏗️ Building and starting containers..."
            docker-compose up --build -d
            
            # Wait for services
            echo "⏳ Waiting for services to start..."
            sleep 30
            
            # Health check
            echo "🔍 Performing health check..."
            if curl -f http://localhost:8000/api/v1/health; then
              echo "✅ Deployment successful!"
              echo "🌐 API available at: http://${{ secrets.VM_HOST }}:8000"
            else
              echo "❌ Health check failed!"
              docker-compose logs
              exit 1
            fi

      - name: 💬 Success Notification
        if: success()
        run: |
          echo "✅ Deployment successful to http://${{ secrets.VM_HOST }}:8000"

      - name: 💬 Failure Notification
        if: failure()
        run: |
          echo "❌ Deployment failed - check logs"