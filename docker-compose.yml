version: '3.8'

services:
  redis:
    image: redis:alpine
    container_name: dietify-redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - dietify-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # MLflow dengan stability improvements
  mlflow:
    build:
      context: ./mlflow
      dockerfile: Dockerfile
    container_name: dietify-mlflow
    ports:
      - "5000:5000"
    restart: unless-stopped
    networks:
      - dietify-network
    environment:
      - MLFLOW_BACKEND_STORE_URI=sqlite:////app/mlflow.db
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=file:///app/mlartifacts
      - MLFLOW_HOST=0.0.0.0
      - MLFLOW_PORT=5000
      # Timeout settings untuk long-running PSO
      - GUNICORN_TIMEOUT=300
      - GUNICORN_WORKERS=2
      - GUNICORN_WORKER_CLASS=sync
      - GUNICORN_WORKER_CONNECTIONS=1000
      - GUNICORN_MAX_REQUESTS=1000
      - GUNICORN_MAX_REQUESTS_JITTER=100
    volumes:
      - mlflow_data:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 120s  # Longer start period
    # Custom command dengan proper timeout dan worker settings
    command: [
      "python", "-m", "mlflow", "server",
      "--backend-store-uri", "sqlite:////app/mlflow.db",
      "--default-artifact-root", "file:///app/mlartifacts",
      "--host", "0.0.0.0",
      "--port", "5000",
      "--serve-artifacts",
      "--gunicorn-opts", "--timeout=300 --workers=2 --worker-class=sync --worker-connections=1000 --max-requests=1000 --max-requests-jitter=100"
    ]

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dietify-api
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - MLFLOW_ENABLED=true
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      # Timeout settings untuk PSO optimization
      - PSO_TIMEOUT=60
      - API_TIMEOUT=120
    depends_on:
      redis:
        condition: service_healthy
      mlflow:
        condition: service_started  # Changed from service_healthy to avoid blocking
    volumes:
      - ./models:/app/models:ro
      - ./output:/app/output
      - ./data:/app/data:ro
    restart: unless-stopped
    networks:
      - dietify-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s
    # Custom command dengan timeout yang lebih besar
    command: ["uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "8000", "--timeout-keep-alive", "120", "--timeout-graceful-shutdown", "60"]

networks:
  dietify-network:
    driver: bridge
    name: dietify-network

volumes:
  mlflow_data:
    driver: local