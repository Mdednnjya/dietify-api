version: '3.8'

services:
  redis:
    image: redis:alpine
    container_name: dietify-redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - dietify-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  mlflow:
    build:
      context: ./mlflow
      dockerfile: Dockerfile
    container_name: dietify-mlflow
    ports:
      - "5000:5000"
    volumes:
      - mlruns:/mlruns
      - mlartifacts:/mlartifacts
    restart: unless-stopped
    networks:
      - dietify-network
    environment:
      - MLFLOW_BACKEND_STORE_URI=file:///mlruns
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=file:///mlartifacts
      - MLFLOW_HOST=0.0.0.0
      - MLFLOW_PORT=5000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/2.0/mlflow/experiments/list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dietify-api
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    depends_on:
      redis:
        condition: service_healthy
      mlflow:
        condition: service_healthy
    volumes:
      - ./models:/app/models:ro
      - ./output:/app/output
      - ./data:/app/data:ro
      - mlruns:/app/mlruns
      - mlartifacts:/app/mlartifacts
    restart: unless-stopped
    networks:
      - dietify-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 90s
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'

networks:
  dietify-network:
    driver: bridge
    name: dietify-network

volumes:
  mlruns:
    driver: local
    name: dietify-mlruns
  mlartifacts:
    driver: local
    name: dietify-mlartifacts